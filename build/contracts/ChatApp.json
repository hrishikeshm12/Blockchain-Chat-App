{
  "contractName": "ChatApp",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "messages",
      "outputs": [
        {
          "name": "message",
          "type": "string"
        },
        {
          "name": "from",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x74e96a4f"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "message",
          "type": "string"
        }
      ],
      "name": "messageSentEvent",
      "type": "event",
      "signature": "0x6dc15866f16ccb265afd212167fbcae0b0fd203ba4bad85d6e53c8733d5248df"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "success",
          "type": "bool"
        }
      ],
      "name": "etherSentEvent",
      "type": "event",
      "signature": "0xaaae1b43e37c4a529c17d6b26869d52ac0c31f5437e460e7cf611ac42e9f4170"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "components": [
            {
              "name": "message",
              "type": "string"
            },
            {
              "name": "from",
              "type": "address"
            }
          ],
          "indexed": false,
          "name": "messages",
          "type": "tuple[]"
        }
      ],
      "name": "messagesFetchedEvent",
      "type": "event",
      "signature": "0x84f98e6e3886d9fe0747a845f61e31b3f01bb39ac0ff9fea88717e58002f11fc"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "message",
          "type": "string"
        }
      ],
      "name": "sendMsg",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x7b02b2c9"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        }
      ],
      "name": "sendEther",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function",
      "signature": "0x48c981e2"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        }
      ],
      "name": "getAllMsg",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x05e15c50"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610eac806100206000396000f3fe608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305e15c501461006757806348c981e21461009057806374e96a4f146100ac5780637b02b2c9146100ea575b600080fd5b34801561007357600080fd5b5061008e6004803603610089919081019061095a565b610113565b005b6100aa60048036036100a59190810190610983565b610361565b005b3480156100b857600080fd5b506100d360048036036100ce91908101906109ac565b610445565b6040516100e1929190610cab565b60405180910390f35b3480156100f657600080fd5b50610111600480360361010c91908101906109fb565b61054a565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050141561027e578073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f84f98e6e3886d9fe0747a845f61e31b3f01bb39ac0ff9fea88717e58002f11fc6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040516102719190610c4c565b60405180910390a361035e565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f84f98e6e3886d9fe0747a845f61e31b3f01bb39ac0ff9fea88717e58002f11fc6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040516103559190610c4c565b60405180910390a35b50565b60008173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505090508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167faaae1b43e37c4a529c17d6b26869d52ac0c31f5437e460e7cf611ac42e9f4170836040516103f79190610c6e565b60405180910390a3801515610441576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043890610cdb565b60405180910390fd5b5050565b60006020528260005260406000206020528160005260406000208181548110151561046c57fe5b90600052602060002090600202016000925092505050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561051a5780601f106104ef5761010080835404028352916020019161051a565b820191906000526020600020905b8154815290600101906020018083116104fd57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060408051908101604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000019080519060200190610637929190610823565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060408051908101604052808381526020013373ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150509060018203906000526020600020906002020160009091929091909150600082015181600001908051906020019061076f929190610823565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6dc15866f16ccb265afd212167fbcae0b0fd203ba4bad85d6e53c8733d5248df836040516108179190610c89565b60405180910390a35050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061086457805160ff1916838001178555610892565b82800160010185558215610892579182015b82811115610891578251825591602001919060010190610876565b5b50905061089f91906108a3565b5090565b6108c591905b808211156108c15760008160009055506001016108a9565b5090565b90565b60006108d48235610de4565b905092915050565b60006108e88235610df6565b905092915050565b600082601f830112151561090357600080fd5b813561091661091182610d28565b610cfb565b9150808252602083016020830185838301111561093257600080fd5b61093d838284610e12565b50505092915050565b60006109528235610e08565b905092915050565b60006020828403121561096c57600080fd5b600061097a848285016108c8565b91505092915050565b60006020828403121561099557600080fd5b60006109a3848285016108dc565b91505092915050565b6000806000606084860312156109c157600080fd5b60006109cf868287016108c8565b93505060206109e0868287016108c8565b92505060406109f186828701610946565b9150509250925092565b60008060408385031215610a0e57600080fd5b6000610a1c858286016108c8565b925050602083013567ffffffffffffffff811115610a3957600080fd5b610a45858286016108f0565b9150509250929050565b610a5881610da6565b82525050565b6000610a6982610d78565b80845260208401935083602082028501610a8285610d54565b60005b84811015610aba578383038852610a9c8383610c03565b9250610aa782610d99565b9150602088019750600181019050610a85565b508196508694505050505092915050565b610ad481610db8565b82525050565b6000610ae582610d8e565b808452610af9816020860160208601610e21565b610b0281610e54565b602085010191505092915050565b6000610b1b82610d83565b808452610b2f816020860160208601610e21565b610b3881610e54565b602085010191505092915050565b600081546001811660008114610b635760018114610b8357610bc4565b607f600283041680865260ff198316602087015260408601935050610bc4565b60028204808652602086019550610b9985610d66565b60005b82811015610bbb57815481890152600182019150602081019050610b9c565b80880195505050505b505092915050565b6000601482527f4661696c656420746f2073656e642045746865720000000000000000000000006020830152604082019050919050565b60006040830160008084018583036000870152610c208382610b46565b92505060018401549050610c3381610e65565b610c406020870182610a4f565b50819250505092915050565b60006020820190508181036000830152610c668184610a5e565b905092915050565b6000602082019050610c836000830184610acb565b92915050565b60006020820190508181036000830152610ca38184610ada565b905092915050565b60006040820190508181036000830152610cc58185610b10565b9050610cd46020830184610a4f565b9392505050565b60006020820190508181036000830152610cf481610bcc565b9050919050565b6000604051905081810181811067ffffffffffffffff82111715610d1e57600080fd5b8060405250919050565b600067ffffffffffffffff821115610d3f57600080fd5b601f19601f8301169050602081019050919050565b60008160005260206000209050919050565b60008160005260206000209050919050565b600081549050919050565b600081519050919050565b600081519050919050565b6000600182019050919050565b6000610db182610dc4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610def82610dc4565b9050919050565b6000610e0182610dc4565b9050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610e3f578082015181840152602081019050610e24565b83811115610e4e576000848401525b50505050565b6000601f19601f8301169050919050565b600060018204905091905056fea265627a7a7230582004eb423e0970920ecb3535f9b27fdac9e4cc61118cc9e043c331b16c0c75c3126c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305e15c501461006757806348c981e21461009057806374e96a4f146100ac5780637b02b2c9146100ea575b600080fd5b34801561007357600080fd5b5061008e6004803603610089919081019061095a565b610113565b005b6100aa60048036036100a59190810190610983565b610361565b005b3480156100b857600080fd5b506100d360048036036100ce91908101906109ac565b610445565b6040516100e1929190610cab565b60405180910390f35b3480156100f657600080fd5b50610111600480360361010c91908101906109fb565b61054a565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050141561027e578073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f84f98e6e3886d9fe0747a845f61e31b3f01bb39ac0ff9fea88717e58002f11fc6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040516102719190610c4c565b60405180910390a361035e565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f84f98e6e3886d9fe0747a845f61e31b3f01bb39ac0ff9fea88717e58002f11fc6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040516103559190610c4c565b60405180910390a35b50565b60008173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505090508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167faaae1b43e37c4a529c17d6b26869d52ac0c31f5437e460e7cf611ac42e9f4170836040516103f79190610c6e565b60405180910390a3801515610441576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043890610cdb565b60405180910390fd5b5050565b60006020528260005260406000206020528160005260406000208181548110151561046c57fe5b90600052602060002090600202016000925092505050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561051a5780601f106104ef5761010080835404028352916020019161051a565b820191906000526020600020905b8154815290600101906020018083116104fd57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060408051908101604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000019080519060200190610637929190610823565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060408051908101604052808381526020013373ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150509060018203906000526020600020906002020160009091929091909150600082015181600001908051906020019061076f929190610823565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6dc15866f16ccb265afd212167fbcae0b0fd203ba4bad85d6e53c8733d5248df836040516108179190610c89565b60405180910390a35050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061086457805160ff1916838001178555610892565b82800160010185558215610892579182015b82811115610891578251825591602001919060010190610876565b5b50905061089f91906108a3565b5090565b6108c591905b808211156108c15760008160009055506001016108a9565b5090565b90565b60006108d48235610de4565b905092915050565b60006108e88235610df6565b905092915050565b600082601f830112151561090357600080fd5b813561091661091182610d28565b610cfb565b9150808252602083016020830185838301111561093257600080fd5b61093d838284610e12565b50505092915050565b60006109528235610e08565b905092915050565b60006020828403121561096c57600080fd5b600061097a848285016108c8565b91505092915050565b60006020828403121561099557600080fd5b60006109a3848285016108dc565b91505092915050565b6000806000606084860312156109c157600080fd5b60006109cf868287016108c8565b93505060206109e0868287016108c8565b92505060406109f186828701610946565b9150509250925092565b60008060408385031215610a0e57600080fd5b6000610a1c858286016108c8565b925050602083013567ffffffffffffffff811115610a3957600080fd5b610a45858286016108f0565b9150509250929050565b610a5881610da6565b82525050565b6000610a6982610d78565b80845260208401935083602082028501610a8285610d54565b60005b84811015610aba578383038852610a9c8383610c03565b9250610aa782610d99565b9150602088019750600181019050610a85565b508196508694505050505092915050565b610ad481610db8565b82525050565b6000610ae582610d8e565b808452610af9816020860160208601610e21565b610b0281610e54565b602085010191505092915050565b6000610b1b82610d83565b808452610b2f816020860160208601610e21565b610b3881610e54565b602085010191505092915050565b600081546001811660008114610b635760018114610b8357610bc4565b607f600283041680865260ff198316602087015260408601935050610bc4565b60028204808652602086019550610b9985610d66565b60005b82811015610bbb57815481890152600182019150602081019050610b9c565b80880195505050505b505092915050565b6000601482527f4661696c656420746f2073656e642045746865720000000000000000000000006020830152604082019050919050565b60006040830160008084018583036000870152610c208382610b46565b92505060018401549050610c3381610e65565b610c406020870182610a4f565b50819250505092915050565b60006020820190508181036000830152610c668184610a5e565b905092915050565b6000602082019050610c836000830184610acb565b92915050565b60006020820190508181036000830152610ca38184610ada565b905092915050565b60006040820190508181036000830152610cc58185610b10565b9050610cd46020830184610a4f565b9392505050565b60006020820190508181036000830152610cf481610bcc565b9050919050565b6000604051905081810181811067ffffffffffffffff82111715610d1e57600080fd5b8060405250919050565b600067ffffffffffffffff821115610d3f57600080fd5b601f19601f8301169050602081019050919050565b60008160005260206000209050919050565b60008160005260206000209050919050565b600081549050919050565b600081519050919050565b600081519050919050565b6000600182019050919050565b6000610db182610dc4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610def82610dc4565b9050919050565b6000610e0182610dc4565b9050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610e3f578082015181840152602081019050610e24565b83811115610e4e576000848401525b50505050565b6000601f19601f8301169050919050565b600060018204905091905056fea265627a7a7230582004eb423e0970920ecb3535f9b27fdac9e4cc61118cc9e043c331b16c0c75c3126c6578706572696d656e74616cf50037",
  "sourceMap": "70:1237:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;70:1237:0;;;;;;;",
  "deployedSourceMap": "70:1237:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1003:301;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1003:301:0;;;;;;;;;;;;;;;;;;;790:205;;;;;;;;;;;;;;;;;;;96:67;;8:9:-1;5:2;;;30:1;27;20:12;5:2;96:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;518:264;;8:9:-1;5:2;;;30:1;27;20:12;5:2;518:264:0;;;;;;;;;;;;;;;;;;;1003:301;1091:1;1056:8;:20;1065:10;1056:20;;;;;;;;;;;;;;;:24;1077:2;1056:24;;;;;;;;;;;;;;;:31;;;;:36;1052:245;;;1147:2;1114:62;;1135:10;1114:62;;;1151:8;:12;1160:2;1151:12;;;;;;;;;;;;;;;:24;1164:10;1151:24;;;;;;;;;;;;;;;1114:62;;;;;;;;;;;;;;;1052:245;;;1256:2;1223:62;;1244:10;1223:62;;;1260:8;:20;1269:10;1260:20;;;;;;;;;;;;;;;:24;1281:2;1260:24;;;;;;;;;;;;;;;1223:62;;;;;;;;;;;;;;;1052:245;1003:301;:::o;790:205::-;855:9;867:2;:7;;:18;875:9;867:18;;;;;;;;;;;;;;;;;;;;;;;855:30;;928:2;901:36;;916:10;901:36;;;932:4;901:36;;;;;;;;;;;;;;;958:4;950:37;;;;;;;;;;;;;;;;;;;;;;;;790:205;;:::o;96:67::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;518:264::-;588:8;:20;597:10;588:20;;;;;;;;;;;;;;;:24;609:2;588:24;;;;;;;;;;;;;;;618:28;;;;;;;;;626:7;618:28;;;;635:10;618:28;;;;;588:59;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;588:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;658:8;:12;667:2;658:12;;;;;;;;;;;;;;;:24;671:10;658:24;;;;;;;;;;;;;;;688:28;;;;;;;;;696:7;688:28;;;;705:10;688:28;;;;;658:59;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;658:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;762:2;733:41;;750:10;733:41;;;766:7;733:41;;;;;;;;;;;;;;;518:264;;:::o;70:1237::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;130:134;;205:54;251:6;238:20;205:54;;;196:63;;190:74;;;;;272:442;;374:3;367:4;359:6;355:17;351:27;344:35;341:2;;;392:1;389;382:12;341:2;429:6;416:20;451:65;466:49;508:6;466:49;;;451:65;;;442:74;;536:6;529:5;522:21;572:4;564:6;560:17;605:4;598:5;594:16;640:3;631:6;626:3;622:16;619:25;616:2;;;657:1;654;647:12;616:2;667:41;701:6;696:3;691;667:41;;;334:380;;;;;;;;722:118;;789:46;827:6;814:20;789:46;;;780:55;;774:66;;;;;847:241;;951:2;939:9;930:7;926:23;922:32;919:2;;;967:1;964;957:12;919:2;1002:1;1019:53;1064:7;1055:6;1044:9;1040:22;1019:53;;;1009:63;;981:97;913:175;;;;;1095:257;;1207:2;1195:9;1186:7;1182:23;1178:32;1175:2;;;1223:1;1220;1213:12;1175:2;1258:1;1275:61;1328:7;1319:6;1308:9;1304:22;1275:61;;;1265:71;;1237:105;1169:183;;;;;1359:491;;;;1497:2;1485:9;1476:7;1472:23;1468:32;1465:2;;;1513:1;1510;1503:12;1465:2;1548:1;1565:53;1610:7;1601:6;1590:9;1586:22;1565:53;;;1555:63;;1527:97;1655:2;1673:53;1718:7;1709:6;1698:9;1694:22;1673:53;;;1663:63;;1634:98;1763:2;1781:53;1826:7;1817:6;1806:9;1802:22;1781:53;;;1771:63;;1742:98;1459:391;;;;;;1857:472;;;1988:2;1976:9;1967:7;1963:23;1959:32;1956:2;;;2004:1;2001;1994:12;1956:2;2039:1;2056:53;2101:7;2092:6;2081:9;2077:22;2056:53;;;2046:63;;2018:97;2174:2;2163:9;2159:18;2146:32;2198:18;2190:6;2187:30;2184:2;;;2230:1;2227;2220:12;2184:2;2250:63;2305:7;2296:6;2285:9;2281:22;2250:63;;;2240:73;;2125:194;1950:379;;;;;;2336:110;2409:31;2434:5;2409:31;;;2404:3;2397:44;2391:55;;;2514:850;;2685:71;2750:5;2685:71;;;2774:6;2769:3;2762:19;2798:4;2793:3;2789:14;2782:21;;2846:3;2888:4;2880:6;2876:17;2871:3;2867:27;2914:73;2981:5;2914:73;;;3008:1;2993:332;3018:6;3015:1;3012:13;2993:332;;;3080:9;3074:4;3070:20;3065:3;3058:33;3106:90;3191:4;3183:6;3106:90;;;3098:98;;3213:77;3283:6;3213:77;;;3203:87;;3313:4;3308:3;3304:14;3297:21;;3040:1;3037;3033:9;3028:14;;2993:332;;;2997:14;3338:4;3331:11;;3355:3;3348:10;;2664:700;;;;;;;;;3372:101;3439:28;3461:5;3439:28;;;3434:3;3427:41;3421:52;;;3480:300;;3582:39;3615:5;3582:39;;;3638:6;3633:3;3626:19;3650:63;3706:6;3699:4;3694:3;3690:14;3683:4;3676:5;3672:16;3650:63;;;3745:29;3767:6;3745:29;;;3738:4;3733:3;3729:14;3725:50;3718:57;;3562:218;;;;;;3787:292;;3885:35;3914:5;3885:35;;;3937:6;3932:3;3925:19;3949:63;4005:6;3998:4;3993:3;3989:14;3982:4;3975:5;3971:16;3949:63;;;4044:29;4066:6;4044:29;;;4037:4;4032:3;4028:14;4024:50;4017:57;;3865:214;;;;;;4111:734;;4220:5;4214:12;4254:1;4243:9;4239:17;4267:1;4262:200;;;;4473:1;4468:371;;;;4232:607;;4262:200;4340:4;4336:1;4325:9;4321:17;4317:28;4364:6;4359:3;4352:19;4420:4;4416:9;4405;4401:25;4394:4;4389:3;4385:14;4378:49;4450:4;4445:3;4441:14;4434:21;;4269:193;4262:200;;4468:371;4537:1;4526:9;4522:17;4558:6;4553:3;4546:19;4588:4;4583:3;4579:14;4572:21;;4615:38;4647:5;4615:38;;;4669:1;4677:130;4691:6;4688:1;4685:13;4677:130;;;4756:7;4750:14;4746:1;4741:3;4737:11;4730:35;4797:1;4788:7;4784:15;4773:26;;4713:4;4710:1;4706:12;4701:17;;4677:130;;;4830:1;4825:3;4821:11;4814:18;;4475:364;;;4232:607;;4190:655;;;;;;4854:296;;5009:2;5004:3;4997:15;5046:66;5041:2;5036:3;5032:12;5025:88;5141:2;5136:3;5132:12;5125:19;;4990:160;;;;5213:623;;5347:4;5342:3;5338:14;5374:1;5448:3;5441:5;5437:15;5496:3;5490:4;5486:14;5480:3;5475;5471:13;5464:37;5516:69;5580:4;5567:11;5516:69;;;5508:77;;5385:212;5662:3;5655:5;5651:15;5645:22;5632:35;;5691:33;5714:9;5691:33;;;5736:62;5792:4;5787:3;5783:14;5770:11;5736:62;;;5607:203;5827:4;5820:11;;5320:516;;;;;;;5843:413;;6037:2;6026:9;6022:18;6014:26;;6087:9;6081:4;6077:20;6073:1;6062:9;6058:17;6051:47;6112:134;6241:4;6232:6;6112:134;;;6104:142;;6008:248;;;;;6263:181;;6365:2;6354:9;6350:18;6342:26;;6379:55;6431:1;6420:9;6416:17;6407:6;6379:55;;;6336:108;;;;;6451:281;;6579:2;6568:9;6564:18;6556:26;;6629:9;6623:4;6619:20;6615:1;6604:9;6600:17;6593:47;6654:68;6717:4;6708:6;6654:68;;;6646:76;;6550:182;;;;;6739:374;;6891:2;6880:9;6876:18;6868:26;;6941:9;6935:4;6931:20;6927:1;6916:9;6912:17;6905:47;6966:64;7025:4;7016:6;6966:64;;;6958:72;;7041:62;7099:2;7088:9;7084:18;7075:6;7041:62;;;6862:251;;;;;;7120:387;;7301:2;7290:9;7286:18;7278:26;;7351:9;7345:4;7341:20;7337:1;7326:9;7322:17;7315:47;7376:121;7492:4;7376:121;;;7368:129;;7272:235;;;;7514:256;;7576:2;7570:9;7560:19;;7614:4;7606:6;7602:17;7713:6;7701:10;7698:22;7677:18;7665:10;7662:34;7659:62;7656:2;;;7734:1;7731;7724:12;7656:2;7754:10;7750:2;7743:22;7554:216;;;;;7777:259;;7921:18;7913:6;7910:30;7907:2;;;7953:1;7950;7943:12;7907:2;7997:4;7993:9;7986:4;7978:6;7974:17;7970:33;7962:41;;8026:4;8020;8016:15;8008:23;;7844:192;;;;8045:161;;8157:4;8154:1;8147:15;8194:4;8191:1;8181:18;8169:30;;8139:67;;;;8217:126;;8294:4;8291:1;8284:15;8331:4;8328:1;8318:18;8306:30;;8276:67;;;;8352:124;;8465:5;8459:12;8449:22;;8443:33;;;;8483:88;;8560:5;8554:12;8544:22;;8538:33;;;;8578:92;;8659:5;8653:12;8643:22;;8637:33;;;;8678:134;;8804:1;8798:4;8794:12;8782:24;;8775:37;;;;8820:105;;8889:31;8914:5;8889:31;;;8878:42;;8872:53;;;;8932:92;;9012:5;9005:13;8998:21;8987:32;;8981:43;;;;9031:128;;9111:42;9104:5;9100:54;9089:65;;9083:76;;;;9166:105;;9235:31;9260:5;9235:31;;;9224:42;;9218:53;;;;9278:113;;9355:31;9380:5;9355:31;;;9344:42;;9338:53;;;;9398:79;;9467:5;9456:16;;9450:27;;;;9485:145;9566:6;9561:3;9556;9543:30;9622:1;9613:6;9608:3;9604:16;9597:27;9536:94;;;;9639:268;9704:1;9711:101;9725:6;9722:1;9719:13;9711:101;;;9801:1;9796:3;9792:11;9786:18;9782:1;9777:3;9773:11;9766:39;9747:2;9744:1;9740:10;9735:15;;9711:101;;;9827:6;9824:1;9821:13;9818:2;;;9892:1;9883:6;9878:3;9874:16;9867:27;9818:2;9688:219;;;;;9915:97;;10003:2;9999:7;9994:2;9987:5;9983:14;9979:28;9969:38;;9963:49;;;;10021:91;;10102:3;10095:5;10091:15;10079:27;;10072:40;;;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract ChatApp {\r\n\r\n    mapping (address => mapping (address => Message[])) public messages;\r\n\r\n    struct Message {\r\n        string message;\r\n        address from;\r\n    }\r\n\r\n    event messageSentEvent(address indexed from, address indexed to, string message);\r\n    event etherSentEvent(address indexed from, address indexed to, bool success);\r\n    event messagesFetchedEvent(address indexed from, address indexed to, Message[] messages);\r\n\r\n    function sendMsg(address to, string memory message) public {\r\n        messages[msg.sender][to].push(Message(message, msg.sender));\r\n        messages[to][msg.sender].push(Message(message, msg.sender));\r\n        emit messageSentEvent(msg.sender, to, message);\r\n    }\r\n\r\n    function sendEther(address payable to) public payable {\r\n        bool sent = to.send(msg.value);\r\n        emit etherSentEvent(msg.sender, to, sent);\r\n\r\n        require(sent, \"Failed to send Ether\");\r\n    }\r\n\r\n    function getAllMsg(address to) public {\r\n        if (messages[msg.sender][to].length == 0) {\r\n            emit messagesFetchedEvent(msg.sender, to, messages[to][msg.sender]);\r\n        }\r\n        else {\r\n            emit messagesFetchedEvent(msg.sender, to, messages[msg.sender][to]);\r\n        }\r\n    }\r\n}\r\n",
  "sourcePath": "C:/hrishikesh/demo/blockchain-chat-app/contracts/ChatApp.sol",
  "ast": {
    "absolutePath": "/C/hrishikesh/demo/blockchain-chat-app/contracts/ChatApp.sol",
    "exportedSymbols": {
      "ChatApp": [
        150
      ]
    },
    "id": 151,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 150,
        "linearizedBaseContracts": [
          150
        ],
        "name": "ChatApp",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "name": "messages",
            "nodeType": "VariableDeclaration",
            "scope": 150,
            "src": "96:67:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct ChatApp.Message[]))"
            },
            "typeName": {
              "id": 7,
              "keyType": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "105:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "96:51:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct ChatApp.Message[]))"
              },
              "valueType": {
                "id": 6,
                "keyType": {
                  "id": 3,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "125:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "116:30:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                  "typeString": "mapping(address => struct ChatApp.Message[])"
                },
                "valueType": {
                  "baseType": {
                    "contractScope": null,
                    "id": 4,
                    "name": "Message",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13,
                    "src": "136:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Message_$13_storage_ptr",
                      "typeString": "struct ChatApp.Message"
                    }
                  },
                  "id": 5,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "136:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage_ptr",
                    "typeString": "struct ChatApp.Message[]"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "ChatApp.Message",
            "id": 13,
            "members": [
              {
                "constant": false,
                "id": 10,
                "name": "message",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "198:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 9,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "198:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "name": "from",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "223:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "223:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Message",
            "nodeType": "StructDefinition",
            "scope": 150,
            "src": "172:71:0",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 21,
            "name": "messageSentEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "274:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "296:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "316:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "273:58:0"
            },
            "src": "251:81:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 29,
            "name": "etherSentEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "359:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "381:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "401:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "401:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "358:56:0"
            },
            "src": "338:77:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 38,
            "name": "messagesFetchedEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "448:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "470:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "name": "messages",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "490:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Message_$13_memory_$dyn_memory_ptr",
                    "typeString": "struct ChatApp.Message[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 34,
                      "name": "Message",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 13,
                      "src": "490:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Message_$13_storage_ptr",
                        "typeString": "struct ChatApp.Message"
                      }
                    },
                    "id": 35,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "490:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage_ptr",
                      "typeString": "struct ChatApp.Message[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "447:62:0"
            },
            "src": "421:89:0"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "577:205:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 53,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "626:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 54,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "635:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 55,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "635:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 52,
                          "name": "Message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "618:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Message_$13_storage_ptr_$",
                            "typeString": "type(struct ChatApp.Message storage pointer)"
                          }
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "618:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Message_$13_memory",
                          "typeString": "struct ChatApp.Message memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Message_$13_memory",
                          "typeString": "struct ChatApp.Message memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 45,
                            "name": "messages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "588:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                            }
                          },
                          "id": 49,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 46,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "597:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 47,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "597:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "588:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                          }
                        },
                        "id": 50,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 48,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "609:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "588:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                          "typeString": "struct ChatApp.Message storage ref[] storage ref"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "588:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Message_$13_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct ChatApp.Message storage ref) returns (uint256)"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "588:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "588:59:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 67,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "696:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 68,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "705:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 69,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "705:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 66,
                          "name": "Message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "688:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Message_$13_storage_ptr_$",
                            "typeString": "type(struct ChatApp.Message storage pointer)"
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "688:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Message_$13_memory",
                          "typeString": "struct ChatApp.Message memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Message_$13_memory",
                          "typeString": "struct ChatApp.Message memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 59,
                            "name": "messages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "658:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                            }
                          },
                          "id": 63,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 60,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "667:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "658:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                          }
                        },
                        "id": 64,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "671:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "671:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "658:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                          "typeString": "struct ChatApp.Message storage ref[] storage ref"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "658:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Message_$13_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct ChatApp.Message storage ref) returns (uint256)"
                      }
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "658:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "658:59:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 74,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "750:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "750:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "762:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "766:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 73,
                      "name": "messageSentEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "733:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "733:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "EmitStatement",
                  "src": "728:46:0"
                }
              ]
            },
            "documentation": null,
            "id": 81,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendMsg",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "535:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "535:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "547:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "534:35:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "577:0:0"
            },
            "scope": 150,
            "src": "518:264:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "844:151:0",
              "statements": [
                {
                  "assignments": [
                    87
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87,
                      "name": "sent",
                      "nodeType": "VariableDeclaration",
                      "scope": 106,
                      "src": "855:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 86,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "855:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 93,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 90,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "875:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "875:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 88,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "867:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "867:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "867:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "855:30:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 95,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "916:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "916:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 97,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "928:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "932:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 94,
                      "name": "etherSentEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "901:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "901:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "EmitStatement",
                  "src": "896:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 102,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "958:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "964:22:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        201,
                        202
                      ],
                      "referencedDeclaration": 202,
                      "src": "950:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "950:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "950:37:0"
                }
              ]
            },
            "documentation": null,
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendEther",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "809:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "809:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "808:20:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "844:0:0"
            },
            "scope": 150,
            "src": "790:205:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1041:263:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 112,
                            "name": "messages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1056:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                            }
                          },
                          "id": 115,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 113,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "1065:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1065:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1056:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                          }
                        },
                        "id": 117,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 116,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "1077:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1056:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                          "typeString": "struct ChatApp.Message storage ref[] storage ref"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1056:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1091:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1056:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 146,
                    "nodeType": "Block",
                    "src": "1203:94:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 135,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "1244:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1244:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 137,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "1256:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 138,
                                  "name": "messages",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8,
                                  "src": "1260:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                                  }
                                },
                                "id": 141,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 139,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 198,
                                    "src": "1269:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 140,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1269:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1260:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                                }
                              },
                              "id": 143,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 142,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "1281:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1260:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                                "typeString": "struct ChatApp.Message storage ref[] storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                                "typeString": "struct ChatApp.Message storage ref[] storage ref"
                              }
                            ],
                            "id": 134,
                            "name": "messagesFetchedEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "1223:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_struct$_Message_$13_memory_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,struct ChatApp.Message memory[] memory)"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1223:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 145,
                        "nodeType": "EmitStatement",
                        "src": "1218:67:0"
                      }
                    ]
                  },
                  "id": 147,
                  "nodeType": "IfStatement",
                  "src": "1052:245:0",
                  "trueBody": {
                    "id": 133,
                    "nodeType": "Block",
                    "src": "1094:94:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 122,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "1135:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1135:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 124,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "1147:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 125,
                                  "name": "messages",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8,
                                  "src": "1151:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                                  }
                                },
                                "id": 127,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 126,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "1160:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1151:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                                }
                              },
                              "id": 130,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 128,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 198,
                                  "src": "1164:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1164:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1151:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                                "typeString": "struct ChatApp.Message storage ref[] storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                                "typeString": "struct ChatApp.Message storage ref[] storage ref"
                              }
                            ],
                            "id": 121,
                            "name": "messagesFetchedEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "1114:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_struct$_Message_$13_memory_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,struct ChatApp.Message memory[] memory)"
                            }
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1114:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 132,
                        "nodeType": "EmitStatement",
                        "src": "1109:67:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllMsg",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1022:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1021:12:0"
            },
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:0:0"
            },
            "scope": 150,
            "src": "1003:301:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 151,
        "src": "70:1237:0"
      }
    ],
    "src": "33:1276:0"
  },
  "legacyAST": {
    "absolutePath": "/C/hrishikesh/demo/blockchain-chat-app/contracts/ChatApp.sol",
    "exportedSymbols": {
      "ChatApp": [
        150
      ]
    },
    "id": 151,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 150,
        "linearizedBaseContracts": [
          150
        ],
        "name": "ChatApp",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "name": "messages",
            "nodeType": "VariableDeclaration",
            "scope": 150,
            "src": "96:67:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct ChatApp.Message[]))"
            },
            "typeName": {
              "id": 7,
              "keyType": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "105:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "96:51:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct ChatApp.Message[]))"
              },
              "valueType": {
                "id": 6,
                "keyType": {
                  "id": 3,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "125:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "116:30:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                  "typeString": "mapping(address => struct ChatApp.Message[])"
                },
                "valueType": {
                  "baseType": {
                    "contractScope": null,
                    "id": 4,
                    "name": "Message",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13,
                    "src": "136:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Message_$13_storage_ptr",
                      "typeString": "struct ChatApp.Message"
                    }
                  },
                  "id": 5,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "136:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage_ptr",
                    "typeString": "struct ChatApp.Message[]"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "ChatApp.Message",
            "id": 13,
            "members": [
              {
                "constant": false,
                "id": 10,
                "name": "message",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "198:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 9,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "198:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "name": "from",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "223:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "223:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Message",
            "nodeType": "StructDefinition",
            "scope": 150,
            "src": "172:71:0",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 21,
            "name": "messageSentEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "274:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "296:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "316:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "273:58:0"
            },
            "src": "251:81:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 29,
            "name": "etherSentEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "359:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "381:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "401:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "401:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "358:56:0"
            },
            "src": "338:77:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 38,
            "name": "messagesFetchedEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "448:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "470:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "name": "messages",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "490:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Message_$13_memory_$dyn_memory_ptr",
                    "typeString": "struct ChatApp.Message[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 34,
                      "name": "Message",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 13,
                      "src": "490:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Message_$13_storage_ptr",
                        "typeString": "struct ChatApp.Message"
                      }
                    },
                    "id": 35,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "490:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage_ptr",
                      "typeString": "struct ChatApp.Message[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "447:62:0"
            },
            "src": "421:89:0"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "577:205:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 53,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "626:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 54,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "635:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 55,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "635:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 52,
                          "name": "Message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "618:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Message_$13_storage_ptr_$",
                            "typeString": "type(struct ChatApp.Message storage pointer)"
                          }
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "618:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Message_$13_memory",
                          "typeString": "struct ChatApp.Message memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Message_$13_memory",
                          "typeString": "struct ChatApp.Message memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 45,
                            "name": "messages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "588:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                            }
                          },
                          "id": 49,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 46,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "597:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 47,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "597:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "588:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                          }
                        },
                        "id": 50,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 48,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "609:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "588:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                          "typeString": "struct ChatApp.Message storage ref[] storage ref"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "588:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Message_$13_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct ChatApp.Message storage ref) returns (uint256)"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "588:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "588:59:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 67,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "696:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 68,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "705:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 69,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "705:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 66,
                          "name": "Message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "688:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Message_$13_storage_ptr_$",
                            "typeString": "type(struct ChatApp.Message storage pointer)"
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "688:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Message_$13_memory",
                          "typeString": "struct ChatApp.Message memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Message_$13_memory",
                          "typeString": "struct ChatApp.Message memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 59,
                            "name": "messages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "658:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                            }
                          },
                          "id": 63,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 60,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "667:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "658:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                          }
                        },
                        "id": 64,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "671:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "671:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "658:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                          "typeString": "struct ChatApp.Message storage ref[] storage ref"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "658:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Message_$13_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct ChatApp.Message storage ref) returns (uint256)"
                      }
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "658:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "658:59:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 74,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "750:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "750:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "762:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "766:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 73,
                      "name": "messageSentEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "733:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "733:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "EmitStatement",
                  "src": "728:46:0"
                }
              ]
            },
            "documentation": null,
            "id": 81,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendMsg",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "535:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "535:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "547:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "534:35:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "577:0:0"
            },
            "scope": 150,
            "src": "518:264:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "844:151:0",
              "statements": [
                {
                  "assignments": [
                    87
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87,
                      "name": "sent",
                      "nodeType": "VariableDeclaration",
                      "scope": 106,
                      "src": "855:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 86,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "855:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 93,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 90,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "875:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "875:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 88,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "867:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "867:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "867:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "855:30:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 95,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "916:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "916:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 97,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "928:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "932:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 94,
                      "name": "etherSentEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "901:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "901:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "EmitStatement",
                  "src": "896:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 102,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "958:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "964:22:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        201,
                        202
                      ],
                      "referencedDeclaration": 202,
                      "src": "950:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "950:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "950:37:0"
                }
              ]
            },
            "documentation": null,
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendEther",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "809:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "809:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "808:20:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "844:0:0"
            },
            "scope": 150,
            "src": "790:205:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1041:263:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 112,
                            "name": "messages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1056:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                            }
                          },
                          "id": 115,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 113,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "1065:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1065:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1056:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                          }
                        },
                        "id": 117,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 116,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "1077:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1056:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                          "typeString": "struct ChatApp.Message storage ref[] storage ref"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1056:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1091:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1056:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 146,
                    "nodeType": "Block",
                    "src": "1203:94:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 135,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "1244:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1244:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 137,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "1256:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 138,
                                  "name": "messages",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8,
                                  "src": "1260:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                                  }
                                },
                                "id": 141,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 139,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 198,
                                    "src": "1269:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 140,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1269:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1260:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                                }
                              },
                              "id": 143,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 142,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "1281:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1260:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                                "typeString": "struct ChatApp.Message storage ref[] storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                                "typeString": "struct ChatApp.Message storage ref[] storage ref"
                              }
                            ],
                            "id": 134,
                            "name": "messagesFetchedEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "1223:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_struct$_Message_$13_memory_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,struct ChatApp.Message memory[] memory)"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1223:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 145,
                        "nodeType": "EmitStatement",
                        "src": "1218:67:0"
                      }
                    ]
                  },
                  "id": 147,
                  "nodeType": "IfStatement",
                  "src": "1052:245:0",
                  "trueBody": {
                    "id": 133,
                    "nodeType": "Block",
                    "src": "1094:94:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 122,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "1135:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1135:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 124,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "1147:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 125,
                                  "name": "messages",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8,
                                  "src": "1151:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct ChatApp.Message storage ref[] storage ref))"
                                  }
                                },
                                "id": 127,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 126,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "1160:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1151:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$13_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct ChatApp.Message storage ref[] storage ref)"
                                }
                              },
                              "id": 130,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 128,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 198,
                                  "src": "1164:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1164:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1151:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                                "typeString": "struct ChatApp.Message storage ref[] storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_Message_$13_storage_$dyn_storage",
                                "typeString": "struct ChatApp.Message storage ref[] storage ref"
                              }
                            ],
                            "id": 121,
                            "name": "messagesFetchedEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "1114:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_struct$_Message_$13_memory_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,struct ChatApp.Message memory[] memory)"
                            }
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1114:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 132,
                        "nodeType": "EmitStatement",
                        "src": "1109:67:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllMsg",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1022:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1021:12:0"
            },
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:0:0"
            },
            "scope": 150,
            "src": "1003:301:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 151,
        "src": "70:1237:0"
      }
    ],
    "src": "33:1276:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xfDfaF344A7128EefD18772d3A4edcb1158949491",
      "transactionHash": "0xa72f248372627674e8ba7f907b26c24e7f4f858709d86d45e995becfd8f7596d"
    }
  },
  "schemaVersion": "3.0.2",
  "updatedAt": "2021-12-01T17:44:14.765Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}